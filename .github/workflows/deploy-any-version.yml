name: Deploy any version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version e.g. 1.0.1'
        required: true

env:
  BUILD_ENVIRONMENT: github

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Get version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: .*
          custom_tag: ${{ github.event.inputs.version }}
          tag_prefix: ""

      - name: Set maven version
        run: |
          mvn -B versions:set -DnewVersion=${{ steps.tag_version.outputs.new_tag }}

      - name: Deploy to Maven Central
        run: mvn -P deploy -B deploy
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Generate javadoc html
        run: mvn -B site

      - name: Move per-module sites
        run: |
          for module in java-client common proxy test-server; do
            mkdir -p target/site/$module
            mv $module/target/site/* target/site/$module/
          done

      - name: Add no-cache meta headers
        run: |
          find target/site -name "*.html" -exec sed -i'' '/<head>/a\
          <meta http-equiv="Cache-Control" content="no-store, no-cache, must-revalidate, max-age=0" />\
          <meta http-equiv="Pragma" content="no-cache" />\
          <meta http-equiv="Expires" content="0" />' {} +

      - name: Publish Javadoc to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site
          destination_dir: javadoc

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_version }}
          name: Flux Capacitor ${{ steps.tag_version.outputs.new_version }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Flux Host JWT
        id: flux-host-jwt
        uses: ./.github/actions/generate-jwt
        with:
          api-key: ${{ secrets.FLUX_HOST_API_KEY }}

      - name: Log in to Flux Host Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.flux.host
          username: ${{ steps.flux-host-jwt.outputs.userId }}
          password: ${{ steps.flux-host-jwt.outputs.token }}

      - name: Build and push test server docker
        uses: docker/build-push-action@v5
        with:
          context: test-server/.
          push: true
          tags: |
            fluxcapacitorio/flux-capacitor-test:${{ steps.tag_version.outputs.new_version }}
            fluxcapacitorio/flux-capacitor-test:latest

      - name: Build and push proxy docker
        uses: docker/build-push-action@v5
        with:
          context: proxy/.
          push: true
          tags: |
            fluxcapacitorio/flux-capacitor-proxy:${{ steps.tag_version.outputs.new_version }}
            fluxcapacitorio/flux-capacitor-proxy:latest
            registry.flux.host/flux-capacitor-proxy:${{ steps.tag_version.outputs.new_version }}
            registry.flux.host/flux-capacitor-proxy:latest
